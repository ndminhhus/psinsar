1. git clone https://github.com/dbekaert/StaMPS.git
2. cd StaMPS/src
3. make
4. make install
5. cd ..
6. nano StaMPS_CONFIG.bash
7. export STAMPS="/home/your-path/StaMPS"
8. source StaMPS_CONFIG.bash
9. mt_prep
10. if error (/bin/csh: bad interpreter) --> the C-shell (csh) package is not installed
11. sudo apt-get install csh
12. mt_prep_snap
When running this process, the amount of the computer load is probably much higher
than during PS processing. This may cause the program to stop due PC memory limitations. If this
is the case, the number of patches should be increased. Default is 1. Lets use 3. 
###mt_prep_snap 20201111 /root/.../INSAR_20201111/ 0.4 3
###For large dataset: 
mt_prep_snap 20201111 /root/.../INSAR_20201111/ 0.4 8 3
(above command gives 8  patches  in  range  and  3  in  azimuth,   giving  24  patches  in  total)
13. Open matlab : matlab
## PS processing
### List of all stamps  parameters:
>>getparm
### Increase number of CPU core for parallel processing
>>setparm('n_cores',4)
### Optimize parameters
Run STep 1 though Step 5 for only one patch at a time
>>cd Patch_1
>>stamps(1,5)
###Full run
>>cd ..
>>stamps(1,8)
##Export PS
>>load parms.mat;
>>ps_plot('v-do', -1);
if can not plot and get error like:
  Can't load '/usr/local/MATLAB/R2016a/bin/glnxa64/libmwosgserver.so'
#https://stackoverflow.com/questions/38473597/matlab-on-linux-cant-plot-anythingcant-load-libstdc-so-6-version-cxxabi-1
Solution: find the file name (.matlab7rc.sh) in "path_to_ matlab/bin" then find and uncomment the following line:
nano .matlab7rc.sh
LDPATH_PREFIX='$MATLAB/sys/opengl/lib/$ARCH'

###save ps.kml (generated from ph_disp for every 10 points with an opacity of 0.4
>> ps_gescatter('ps.kml', ph_disp, 10, 0.4)
